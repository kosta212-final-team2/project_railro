-- 2021.06.04 RAILRO 계정생성 및 권한부여 완료

CREATE USER RAILRO IDENTIFIED BY RAILRO212;
GRANT CONNECT, RESOURCE, CREATE VIEW, CREATE SEQUENCE TO RAILRO;
GRANT DBA TO RAILRO;

ADMIN / ADMIN212

COMMIT;

-- 2021.06.07 테이블생성
-- 2021.06.08 테이블 컬럼 수정

/**
 * 게시판
 * - 댓글 300자 제한
 */
-- 자유게시판
CREATE TABLE FREE_BOARD (
	FREE_BNO	NUMBER(8)	CONSTRAINT PK_FREE_BNO PRIMARY KEY, -- 글번호
	FREE_SUBJECT	VARCHAR2(120)	NOT NULL, -- 제목
	FREE_CONTENT	LONGTEXT	NOT NULL, -- 글 내용
	FREE_REGDATE	DATE	NOT NULL, -- 글 작성일
	FREE_READNUM	NUMBER(8)	NULL, -- 조회수
	FREE_VOTE	NUMBER(8)	NULL, -- 추천수
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT FREE_BOARD_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 글 작성자 아이디
);

CREATE TABLE FREE_REPLY (
	FREE_RNO	NUMBER(8)	CONSTRAINT PK_FREE_RNO PRIMARY KEY, -- 댓글번호
	FREE_REPLY_CONTENT	VARCHAR2(900)	NOT NULL, -- 댓글 내용
	FREE_REPLY_REGDATE	DATE	NOT NULL, -- 댓글 작성일
	FREE_BNO	NUMBER(8)	CONSTRAINT FREE_REPLY_FK_FREE_BNO REFERENCES FREE_BOARD(FREE_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT FREE_REPLY_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 댓글 작성자 아이디
);

CREATE TABLE FREE_RECOMMEND (
	FREE_VNO	NUMBER(8)	CONSTRAINT PK_FREE_VNO PRIMARY KEY, -- 추천번호
	FREE_VOTEDATE	DATE	NOT NULL, -- 추천일
	FREE_BNO	NUMBER(8)	CONSTRAINT FREE_RECOMMEND_FK_FREE_BNO REFERENCES FREE_BOARD(FREE_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT FREE_RECOMMEND_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 추천을 누른 아이디
);

CREATE TABLE FREE_DECLARE (
	FREE_DNO	NUMBER(8)	CONSTRAINT PK_FREE_DNO PRIMARY KEY, -- 신고번호
	FREE_DECDATE	DATE	NOT NULL, -- 신고일
	FREE_REASON	VARCHAR2(900)	NOT NULL, -- 신고사유
	FREE_STATE NUMBER(1) NOT NULL, -- 처리상태 (0:처리 전, 1:처리완료)
	FREE_BNO	NUMBER(8)	CONSTRAINT FREE_DECLARE_FK_FREE_BNO REFERENCES FREE_BOARD(FREE_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT FREE_DECLARE_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 신고를 누른 아이디
);

CREATE TABLE FREE_PIC (
	FREE_PNO NUMBER(8) CONSTRAINT PK_FREE_PNO PRIMARY KEY, -- 사진번호
	FREE_PIC_NAME VARCHAR2(300) NOT NULL, -- 사진이름
	FREE_PIC_SAVENAME VARCHAR2(300) NOT NULL, -- 저장한 사진이름
	FREE_PIC_URL VARCHAR2(900) NOT NULL, -- 경로
	FREE_PIC_SIZE NUMBER(9) NOT NULL, -- 크기
	FREE_PIC_EXT VARCHAR2(30) NULL, -- 확장자
	FREE_PIC_REGDATE DATE NOT NULL, -- 사진등록일
	FREE_BNO	NUMBER(8)	CONSTRAINT FREE_PIC_FK_FREE_BNO REFERENCES FREE_BOARD(FREE_BNO) -- 글번호
);

-- 정보게시판
CREATE TABLE INFO_BOARD (
	INFO_BNO	NUMBER(8)	CONSTRAINT PK_INFO_BNO PRIMARY KEY, -- 글번호
	INFO_SUBJECT	VARCHAR2(120)	NOT NULL, -- 제목
	INFO_CONTENT	LONGTEXT	NOT NULL, -- 글 내용
	INFO_REGDATE	DATE	NOT NULL, -- 글 작성일
	INFO_READNUM	NUMBER(8)	NULL, -- 조회수
	INFO_VOTE	NUMBER(4)	NULL, -- 추천수
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT INFO_BOARD_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 글 작성자 아이디
);

CREATE TABLE INFO_REPLY (
	INFO_RNO	NUMBER(8)	CONSTRAINT PK_INFO_REPLY PRIMARY KEY, -- 댓글번호
	INFO_REPLY_CONTENT	VARCHAR2(900)	NOT NULL, -- 댓글 내용
	INFO_REPLY_REGDATE	DATE	NOT NULL -- 댓글 작성일
	INFO_BNO	NUMBER(8)	CONSTRAINT INFO_REPLY_FK_INFO_BNO REFERENCES INFO_BOARD(INFO_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT INFO_REPLY_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID), -- 댓글 작성자 아이디
);

CREATE TABLE INFO_RECOMMEND (
	INFO_VNO	NUMBER(8)	CONSTRAINT PK_INFO_RECOMMEND PRIMARY KEY, -- 추천번호
	INFO_VOTEDATE	DATE	NOT NULL, -- 추천일
	INFO_BNO	NUMBER(8)	CONSTRAINT INFO_RECOMMEND_FK_INFO_BNO REFERENCES INFO_BOARD(INFO_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT INFO_RECOMMEND_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 추천을 누른 아이디
);

CREATE TABLE INFO_DECLARE (
	INFO_DNO	NUMBER(8)	CONSTRAINT PK_INFO_DECLARE PRIMARY KEY, -- 신고번호
	INFO_REASON	VARCHAR2(900)	NOT NULL, -- 신고사유
	INFO_STATE NUMBER(1) NOT NULL, -- 처리상태 (0:처리 전, 1:처리완료)
	INFO_BNO	NUMBER(8)	CONSTRAINT INFO_DECLARE_FK_INFO_BNO REFERENCES INFO_BOARD(INFO_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT INFO_DECLARE_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 신고를 누른 아이디
);

CREATE TABLE INFO_PIC (
	INFO_PNO NUMBER(8) CONSTRAINT PK_INFO_PNO PRIMARY KEY,
	INFO_PIC_NAME VARCHAR2(300) NOT NULL,
	INFO_PIC_SAVENAME VARCHAR2(300) NOT NULL,
	INFO_PIC_URL VARCHAR2(900) NOT NULL,
	INFO_PIC_SIZE NUMBER(9) NOT NULL,
	INFO_PIC_EXT VARCHAR2(30) NULL,
	INFO_PIC_REGDATE DATE NOT NULL,
	INFO_BNO	NUMBER(8)	CONSTRAINT INFO_PIC_FK_INFO_BNO REFERENCES INFO_BOARD(INFO_BNO)
);

-- 후기게시판
CREATE TABLE TRIP_BOARD (
	TRIP_BNO	NUMBER(8) 	CONSTRAINT PK_TRIP_BNO PRIMARY KEY, -- 글번호
	TRIP_SUBJECT	VARCHAR2(120)	NOT NULL, -- 제목
	TRIP_REGDATE	DATE	NOT NULL, -- 글 작성일
	TRIP_READNUM	NUMBER(8)	NOT NULL, -- 조회수
	TRIP_VOTE	NUMBER()	NULL, -- 추천수
	TRIP_CONTENT	LONGTEXT	NULL, -- 글 내용
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT TRIP_BOARD_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID), -- 글 작성자 아이디
	PLAN_ID	NUMBER	NOT NULL -- 일정 번호
);

CREATE TABLE TRIP_REPLY (
	TRIP_RNO	NUMBER(8)	CONSTRAINT PK_TRIP_REPLY PRIMARY KEY, -- 댓글번호
	TRIP_BNO	NUMBER(8)	CONSTRAINT TRIP_REPLY_FK_TRIP_BNO REFERENCES TRIP_BOARD(TRIP_BNO), -- 글번호
	TRIP_REPLY_CONTENT	VARCHAR2(900)	NULL, -- 댓글내용
	TRIP_REPLY_REGDATE	DATE	NULL, -- 댓글 작성일
	MEMBER_ID	VARCHAR2(20) 	CONSTRAINT TRIP_REPIY_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 댓글 작성자 아이디
);

CREATE TABLE TRIP_RECOMMEND (
	TRIP_VNO	NUMBER()	CONSTRAINT PK_TRIP_RECOMMEND PRIMARY KEY, -- 추천번호
	TRIP_VOTEDATE	DATE	NULL, -- 추천일
	TRIP_BNO	NUMBER(8)	CONSTRAINT TRIP_RECOMMEND_FK_TRIP_BNO REFERENCES TRIP_BOARD(TRIP_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT TRIP_RECOMMEND_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 추천을 누른 아이디
);

CREATE TABLE TRIP_DECLARE (
	TRIP_DNO	NUMBER(8)	NOT NULL, -- 신고번호
	TRIP_DECDATE	DATE	NULL, -- 신고일
	TRIP_REASON	VARCHAR2(900)	NULL, -- 신고사유
	TRIP_STATE NUMBER(1) NOT NULL, -- 처리상태 (0:처리 전, 1:처리완료)
	TRIP_BNO	NUMBER(8)	CONSTRAINT TRIP_DECLARE_FK_TRIP_BNO REFERENCES TRIP_BOARD(TRIP_BNO), -- 글번호
	MEMBER_ID	VARCHAR2(20)	CONSTRAINT TRIP_DECLARE_FK_MEMBER_ID REFERENCES MEMBER(MEMBER_ID) -- 신고를 누른 아이디
);

CREATE TABLE TRIP_PIC (
	TRIP_PNO NUMBER(8) CONSTRAINT PK_TRIP_PNO PRIMARY KEY,
	TRIP_PIC_NAME VARCHAR2(300) NOT NULL,
	TRIP_PIC_SAVENAME VARCHAR2(300) NOT NULL,
	TRIP_PIC_URL VARCHAR2(900) NOT NULL,
	TRIP_PIC_SIZE NUMBER(9) NOT NULL,
	TRIP_PIC_EXT VARCHAR2(30) NULL,
	TRIP_PIC_REGDATE DATE NOT NULL,
	TRIP_BNO	NUMBER(8)	CONSTRAINT TRIP_PIC_FK_TRIP_BNO REFERENCES TRIP_BOARD(TRIP_BNO)
);

/**
 * 지도
 */
-- 일정

CREATE TABLE TRAVEL_PLAN (
	PLAN_ID	NUMBER	NOT NULL,
	user_id	varchar2(20)	NOT NULL,
	PLAN_NAME	varchar2	NULL,
	START_DATE	DATE	NULL,
	END_DATE	DATE	NULL
);

CREATE TABLE TRAIN_STATION (
	STATION_ID	NUMBER	NOT NULL,
	STATION_NAME	VARCHAR2(50)	NULL,
	STATION_LAT	NUMBER	NULL,
	STATION_LNG	NUMBER	NULL,
	STATION_ADDR	VARCHAR2(500)	NULL,
	STATION_NODE_ID	VARCHAR2	NULL
);


CREATE TABLE STATION_PLAN (
	STATON_PLAN_ID	NUMBER	NOT NULL,
	PLAN_NUM	NUMBER	NOT NULL,
	STATION_NUM	NUMBER	NOT NULL,
	TRAVEL_DATE	DATE	NULL,
	TRAVEL_ORDER	NUMBER	NULL
);

CREATE TABLE DETAILED_PLAN (
	DETAILED_PLAN_ID	NUMBER	NOT NULL,
	STATON_PLAN_NUM	NUMBER	NOT NULL,
	PLACE_NAME	VARCHAR2	NULL,
	PLACE_ADDR	VARCHAR2	NULL,
	DETAILED_ORDER	NUMBER	NULL,
	PLACE_TYPE	VARCHAR2	NULL,
	TRAVEL_TIME	NUMBER	NULL
);





CREATE TABLE RCMND_PLACES (
	RCMND_PL_ID	NUMBER	NOT NULL,
	STATION_ID	NUMBER	NOT NULL,
	RCMND_NAME	VARCHAR2	NULL,
	RCMND_VISITS	NUMBER	NULL,
	RCMND_ADDR	VARCHAR2	NULL,
	RCMND_LAT	NUMBER	NULL,
	RCMND_LNG	NUMBER	NULL,
	RCMND_CATE	VARCHAR2	NULL
);

CREATE TABLE TRAIN_SCHEDULE (
	TRAIN_TMID	NUMBER	NOT NULL,
	ARRIVAL_STATION	NUMBER	NOT NULL,
	TRAIN_ID	VARCHAR2(2)	NOT NULL,
	TRAIN_FARE	NUMBER	NULL,
	DEPARTURE_TIME	DATE	NULL,
	ARRIVAL_TIME	DATE	NULL
);



CREATE TABLE TRAIN_TYPE (
	TRAIN_ID	VARCHAR2(2)	NOT NULL,
	TRAIN_NAME	VARCHAR2(30)	NULL
);


ALTER TABLE TRAVEL_PLAN ADD CONSTRAINT PK_TRAVEL_PLAN PRIMARY KEY (
	PLAN_ID
);

ALTER TABLE TRAIN_STATION ADD CONSTRAINT PK_TRAIN_STATION PRIMARY KEY (
	STATION_ID
);



ALTER TABLE STATION_PLAN ADD CONSTRAINT PK_STATION_PLAN PRIMARY KEY (
	STATON_PLAN_ID
);

ALTER TABLE DETAILED_PLAN ADD CONSTRAINT PK_DETAILED_PLAN PRIMARY KEY (
	DETAILED_PLAN_ID
);


ALTER TABLE RCMND_PLACES ADD CONSTRAINT PK_RCMND_PLACES PRIMARY KEY (
	RCMND_PL_ID
);

ALTER TABLE TRAIN_SCHEDULE ADD CONSTRAINT PK_TRAIN_SCHEDULE PRIMARY KEY (
	TRAIN_TMID
);


ALTER TABLE TRAIN_TYPE ADD CONSTRAINT PK_TRAIN_TYPE PRIMARY KEY (
	TRAIN_ID
);


ALTER TABLE TRAVEL_PLAN ADD CONSTRAINT TRAVEL_PLAN_FK_user_id FOREIGN KEY (
	user_id
)
REFERENCES member (
	member_id
);


ALTER TABLE STATION_PLAN ADD CONSTRAINT STATION_PLAN_FK_PLAN_NUM FOREIGN KEY (
	PLAN_NUM
)
REFERENCES TRAVEL_PLAN (
	PLAN_ID
);

ALTER TABLE STATION_PLAN ADD CONSTRAINT STATION_PLAN_FK_STATION_NUM FOREIGN KEY (
	STATION_NUM
)
REFERENCES TRAIN_STATION (
	STATION_ID
);

ALTER TABLE DETAILED_PLAN ADD CONSTRAINT DETAILED_PLAN_FK_STATON_PLAN_NUM FOREIGN KEY (
	STATON_PLAN_NUM
)
REFERENCES STATION_PLAN (
	STATON_PLAN_ID
);



ALTER TABLE RCMND_PLACES ADD CONSTRAINT RCMND_PLACES_FK_STATION_NUM FOREIGN KEY (
	STATION_NUM
)
REFERENCES TRAIN_STATION (
	STATION_ID
);

ALTER TABLE TRAIN_SCHEDULE ADD CONSTRAINT TRAIN_SCHEDULE_FK_ARRIVAL_STATION FOREIGN KEY (
	ARRIVAL_STATION
)
REFERENCES STATION_PLAN (
	STATON_PLAN_ID
);

ALTER TABLE TRAIN_SCHEDULE ADD CONSTRAINT TRAIN_SCHEDULE_FK_TRAIN_NUM FOREIGN KEY (
	TRAIN_NUM
)
REFERENCES TRAIN_TYPE (
	TRAIN_ID
);




/**
 * 회원
 */
CREATE TABLE MEMBER (
	MEMBER_ID   VARCHAR2(20)   NOT NULL,
	PWD   VARCHAR2(20)   NOT NULL,
	ADDR   VARCHAR2(50)   NOT NULL,
	EMAIL   VARCHAR2(20)   NOT NULL,
	NAME   VARCHAR2(20)   NOT NULL,
	PICTURE   VARCHAR2(50)   NULL,
	PHONE   VARCHAR2(20)   NOT NULL,
	CONSTRAINT PK_MEMBER_ID PRIMARY KEY (MEMBER_ID)
);

CREATE TABLE OAUTH_ID (
	NAVER_ID   VARCHAR2(20)   NOT NULL,
	MEMBER_ID   VARCHAR2(20)   NOT NULL,
	REFRESHTOKEN   NUMBER   NOT NULL,
	ACCESSTOKEN   NUMBER   NULL,
	CONSTRAINT PK_NAVER_ID PRIMARY KEY (NAVER_ID),
	CONSTRAINTS OAUTH_ID_FK_MEMBER_ID FOREIGN KEY(MEMBER_ID) 
	REFERENCES MEMBER(MEMBER_ID)
);

CREATE TABLE AUTHORITY (
	MEMBER_ID   VARCHAR2(20)   NOT NULL,
	ROLE   VARCHAR2(20)   NOT NULL,
	CONSTRAINTS AUTHORITY_FK_MEMBER_ID FOREIGN KEY(MEMBER_ID) 
	REFERENCES MEMBER(MEMBER_ID),
	CONSTRAINT PK_MEMBER_ID_ROLE PRIMARY KEY(MEMBER_ID, ROLE)
);

CREATE TABLE FOLLOW (
  FROM_ID   VARCHAR2(20)   NOT NULL,
  TO_ID   VARCHAR2(20)   NOT NULL,
  REGDATE   DATE   NOT NULL,
	CONSTRAINTS FOLLOW_FK_FROM_ID FOREIGN KEY(FROM_ID) 
	REFERENCES MEMBER(MEMBER_ID),
	CONSTRAINTS FOLLOW_FK_TO_ID FOREIGN KEY(TO_ID) 
	REFERENCES MEMBER(MEMBER_ID),
	CONSTRAINT PK_FROM_ID_TO_ID PRIMARY KEY(FROM_ID, TO_ID)
);


